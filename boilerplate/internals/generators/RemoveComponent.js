const helpers = require('./helpers');

module.exports = {
  description: 'Remove a React Component and all autogenerated dependencies',
  prompts: [
    {
      type: 'list',
      name: 'type',
      message: 'What is the type of the component:',
      choices: [
        'component',
        'container'
      ]
    },
    {
      type: 'list',
      name: 'componentFolderName',
      message: 'Which one to remove?',
      choices: function (response) {
        return helpers.getDirectories(response);
      }
    }
  ],
  actions: ( data ) =>  {
    let actions = [];

    actions.push(
        function (data) {
          const fs = require('fs');
          const path = `./app/${data.type}s/${data.componentFolderName}/`;
          const msg = 'We deleted the {{componentFolderName}}!!!!';

          if (fs.existsSync(path) ) {
            fs.readdirSync(path).forEach(function(file, index) {
              var currPath = path + '/' + file;

              fs.unlinkSync(currPath);
            });

            fs.rmdirSync(path);
          }

          return plop.renderString(msg, data);
        }, {
          type: 'modify',
          path: 'app/reducers.js',
          pattern: new RegExp('import ' + helpers.camelize(data.componentFolderName) + 'Reducer.*\n', 'g'),
          template: ''
        }, {
          type: 'modify',
          path: 'app/reducers.js',
          pattern: new RegExp(helpers.camelize(data.componentFolderName) + 'Reducer,\n', 'g'),
          template: ''
        }, {
          type: 'modify',
          path: 'app/containers/App/App.js',
          pattern: new RegExp(`import . as ${helpers.camelize(data.componentFolderName)}Actions.*\n`, 'g'),
          template: ''
        }, {
          type: 'modify',
          path: 'app/containers/App/App.js',
          pattern: new RegExp(helpers.camelize(data.componentFolderName) + 'Data.*\n', 'g'),
          template: ''
        },
        {
          type: 'modify',
          path: 'app/containers/App/App.js',
          pattern: new RegExp(helpers.camelize(data.componentFolderName) + 'Actions,\n', 'g'),
          template: ''
        }
    );


    return actions;
  }
};